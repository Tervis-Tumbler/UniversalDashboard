{"version":3,"sources":["webpack:///./src/app/ud-image-carousel.jsx"],"names":["UdImageCarousel","props","onCarouselButtonClick","bind","state","slideUrlLink","pubSubToken","PubSub","subscribe","id","onIncomingEvent","eventName","event","type","loadData","currentButtonParentId","activeSlideHref","$","attributes","href","value","setState","carouselItems","items","map","item","url","backgroundColor","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","color","fontColor","titlePosition","marginTop","fontSize","fontWeight","title","textPosition","text","options","fullWidth","indicators","showIndecators","onCycleTo","autoCycle","setTimeout","carousel","speed","btn","fixButton","buttonText","css","width","height","React","Component"],"mappings":"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","file":"ud-image-carousel.98b6e0fc72b16353d581.bundle.js","sourcesContent":["import React from 'react';\r\nimport {Carousel} from \"react-materialize\";\r\nimport $ from \"jquery\";\r\nimport PubSub from 'pubsub-js';\r\n\r\n\r\nexport default class UdImageCarousel extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.onCarouselButtonClick = this.onCarouselButtonClick.bind(this);\r\n        this.state = {\r\n            slideUrlLink:null\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.pubSubToken = PubSub.subscribe(this.props.id, this.onIncomingEvent.bind(this));\r\n    }\r\n\r\n    onIncomingEvent(eventName, event) {\r\n        if (event.type === \"syncElement\") {\r\n            this.loadData();\r\n        }\r\n    }\r\n\r\n    onCarouselButtonClick(props){\r\n        let currentButtonParentId = props.id\r\n        let activeSlideHref = $(`#${currentButtonParentId} .carousel-item.active`)[0].attributes.href.value\r\n        this.setState({\r\n            slideUrlLink:activeSlideHref\r\n        })\r\n    }\r\n\r\n    render(){\r\n\r\n        // Carousel Items.\r\n        var carouselItems = this.props.items.map((item) => {\r\n            return <div\r\n                href={item.url} \r\n                style={{\r\n                    backgroundColor:item.backgroundColor,\r\n                    backgroundImage:`url(${item.backgroundImage})`,\r\n                    backgroundRepeat:item.backgroundRepeat,\r\n                    backgroundSize:item.backgroundSize,\r\n                    backgroundPosition: item.backgroundPosition,\r\n                    color:item.fontColor\r\n                }}>\r\n                <h2 className={`${item.titlePosition}-align`} style={{\r\n                    color:item.fontColor,\r\n                    marginTop: '3em',\r\n                    fontSize:'48px',\r\n                    fontWeight:'800',\r\n                    }}>{item.title}</h2>\r\n                \r\n                <p className={`${item.textPosition}-align`} style={{\r\n                    color:item.fontColor,\r\n                    marginTop: '1.5em',\r\n                    fontSize:'36px',\r\n                    fontWeight:'500'\r\n                    }}>{item.text}</p>\r\n            </div>\r\n        });\r\n\r\n        // Main carousel options.\r\n        var options = {\r\n            fullWidth:this.props.fullWidth,\r\n            indicators:this.props.showIndecators,\r\n            onCycleTo: () => {\r\n                if(this.props.autoCycle){\r\n                    this.onCarouselButtonClick(this.props)\r\n                    setTimeout(() => {\r\n                        $(`#${this.props.id}`).carousel('next')\r\n                    },this.props.speed)\r\n                }\r\n                else{\r\n                    this.onCarouselButtonClick(this.props)\r\n                }        \r\n            }\r\n        }\r\n\r\n        // Fix item button on main carousel.\r\n        var btn = null;\r\n        if(this.props.fixButton){\r\n            btn = <a class=\"btn waves-effect white grey-text darken-text-2\" href={this.state.slideUrlLink} target='_blank' >{this.props.buttonText}</a>\r\n        };\r\n\r\n        // Set the width and height of the carousel container \r\n        $(`div#${this.props.id}.carousel.carousel-slider`).css({\r\n            \"width\":`${this.props.width}`,\r\n            \"height\":`${this.props.height}`\r\n        })\r\n\r\n        return (\r\n \r\n            <Carousel carouselId={this.props.id} options={options} fixedItem={btn}>\r\n                {carouselItems}\r\n            </Carousel>\r\n\r\n        )\r\n    }\r\n\r\n}"],"sourceRoot":""}